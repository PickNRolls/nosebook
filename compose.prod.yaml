services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    expose:
      - 9090
    volumes:
      - prometheus:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana

  db:
    extends:
      file: ./compose.yaml
      service: db
    build:
      context: ./postgres_image/
    container_name: db
    volumes:
      - db:/data/postgres
    expose:
      - 5432
    restart: unless-stopped
    
  db-prometheus-exporter:
    extends:
      file: ./compose.yaml
      service: db-prometheus-exporter

  rabbitmq:
    extends:
      file: ./compose.yaml
      service: rabbitmq
    restart: unless-stopped
    ports: []
    expose:
      - 5672
      - 15672
      - 15692
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 15s
      timeout: 30s
      retries: 5

  notification:
    extends:
      file: './compose.yaml'
      service: notification
    build:
      context: ../nosebook_notification
      target: final
    restart: unless-stopped
    ports: []

  backend:
    extends:
      file: './compose.yaml'
      service: backend
    environment:
      - APP_ENV=prod
      - TRACING_ENABLED=0
    develop:
    healthcheck:
      test: curl http://backend:8080/ping --fail
      interval: 10s
      timeout: 20s
      retries: 3

  frontend:
    build:
      context: ../nosebook_frontend
      target: prod
    container_name: frontend
    depends_on:
      - backend
    ports:
      - 80:8000

secrets:
  db-password:
    file: db-password.txt
  aws-access-key-id:
    file: aws-access-key-id.txt
  aws-secret-access-key:
    file: aws-secret-access-key.txt

volumes:
  db:
  prometheus:
  grafana:

